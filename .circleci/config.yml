version: 2.1

parameters:
  # This parameter is used to trigger the main workflow
  image_name:
    type: string
    default: speech_recognition_model_api
  package_version:
    type: string
    default: "3.2.34"
  dependency_image_name:
    type: string
    default: speech-recognition-open-api-dependency
  dependency_version:
    type: string
    default: "4.4"
  build_dependency:
    type: boolean
    default: false

jobs:
  sonar-scan:
    machine:
      image: ubuntu-2004:202101-01
    working_directory: ~/speech-recognition-model-api/
    steps:
      - checkout:
          path: ~/speech-recognition-model-api
      - run:
          name: Sonar Scan
          command: docker run --rm -e SONAR_HOST_URL="https://sonarcloud.io" -e SONAR_TOKEN=$SONAR_TOKEN -v $PWD:/usr/src sonarsource/sonar-scanner-cli -Dsonar.branch.name=$CIRCLE_BRANCH

  build_and_deploy_api_image:
    machine:
      image: ubuntu-2004:202101-01
      resource_class: xlarge
    working_directory: ~/speech-recognition-model-api/
    steps:
      - checkout:
          path: ~/speech-recognition-model-api
      - run:
          name: Setup Google credentials
          command: |
            echo ${GOOGLE_AUTH} > ${HOME}/gcp-key.json
            pip install google_compute_engine
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud --quiet config set project ${GCP_PROJECT}
      - run:
          name: Build dependencies image
          command: |
            echo "Build ..."
            if << pipeline.parameters.build_dependency >> ; then
              docker build --rm=false -t gcr.io/${GCP_PROJECT}/<< pipeline.parameters.dependency_image_name >>:<< pipeline.parameters.dependency_version >> dependencies/
              gcloud docker -- push gcr.io/${GCP_PROJECT}/<< pipeline.parameters.dependency_image_name >>:<< pipeline.parameters.dependency_version >>
            fi
#      - when:
#          condition:
#            equal: [ true, << pipeline.paramaters.build_dependency >> ]
#          steps:
#            - run: |
#                docker build --rm=false -t gcr.io/${GCP_PROJECT}/<< pipeline.parameters.dependency_image_name >>:<< pipeline.parameters.dependency_version >> dependencies/
#                gcloud docker -- push gcr.io/${GCP_PROJECT}/<< pipeline.parameters.dependency_image_name >>:<< pipeline.parameters.dependency_version >>
      - run:
          name: Build docker image
          command: |
            echo "Build ..."
            docker build --rm=false -t gcr.io/${GCP_PROJECT}/<< pipeline.parameters.image_name >>:<< pipeline.parameters.package_version >> .
      - run:
          name: deploy image to registry
          command: |
            echo "Deploy ..."
            gcloud docker -- push gcr.io/${GCP_PROJECT}/<< pipeline.parameters.image_name >>:<< pipeline.parameters.package_version >>
      - run:
          name: Remove account details
          command: |
            rm ${HOME}/gcp-key.json ; ls
      - run:
          name: E2e build and deploy to gcr
          command: |
            echo "Build and deploy to gcr"

workflows:
  version: 2
  main_workflow:
    jobs:
    - sonar-scan:
          name: sonar-scan
    - approve_to_publish:
         name: approve-build-and-deploy
         type: approval
    - build_and_deploy_api_image:
         name: build_and_deploy_api_image
         requires:
            - approve-build-and-deploy
